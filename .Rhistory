df_mstd %>% names %>% sub(pattern = "^t", replacement = "time-") %>% sub(pattern = "^f", replacement = "FFT-") %>% sub(pattern = "*Acc*", replacement = "-accelerometer-") %>% sub(pattern = "Gyro", replacement = "-gyrometer-") %>% sub(pattern = "*Body*", replacement = "body") %>% sub(pattern = "Body", replacement = "") %>% sub(pattern = "Jerk", replacement = "jerk-") %>% sub(pattern = "*Mag*", replacement = "magnitude-") %>% sub(pattern = "*Gravity*", replacement = "gravity-") %>% gsub(pattern = "*--*", replacement = "-") %>% sub(pattern = "*\(|\)*", replacement = "X")
df_mstd %>% names %>% sub(pattern = "^t", replacement = "time-") %>% sub(pattern = "^f", replacement = "FFT-") %>% sub(pattern = "*Acc*", replacement = "-accelerometer-") %>% sub(pattern = "Gyro", replacement = "-gyrometer-") %>% sub(pattern = "*Body*", replacement = "body") %>% sub(pattern = "Body", replacement = "") %>% sub(pattern = "Jerk", replacement = "jerk-") %>% sub(pattern = "*Mag*", replacement = "magnitude-") %>% sub(pattern = "*Gravity*", replacement = "gravity-") %>% gsub(pattern = "*--*", replacement = "-") %>% sub(pattern = "*\\(|\\)*", replacement = "X")
df_mstd %>% names %>% sub(pattern = "^t", replacement = "time-") %>% sub(pattern = "^f", replacement = "FFT-") %>% sub(pattern = "*Acc*", replacement = "-accelerometer-") %>% sub(pattern = "Gyro", replacement = "-gyrometer-") %>% sub(pattern = "*Body*", replacement = "body") %>% sub(pattern = "Body", replacement = "") %>% sub(pattern = "Jerk", replacement = "jerk-") %>% sub(pattern = "*Mag*", replacement = "magnitude-") %>% sub(pattern = "*Gravity*", replacement = "gravity-") %>% gsub(pattern = "*--*", replacement = "-") %>% sub(pattern = "*\\(\\)*", replacement = "X")
df_mstd %>% names %>% sub(pattern = "^t", replacement = "time-") %>% sub(pattern = "^f", replacement = "FFT-") %>% sub(pattern = "*Acc*", replacement = "-accelerometer-") %>% sub(pattern = "Gyro", replacement = "-gyrometer-") %>% sub(pattern = "*Body*", replacement = "body") %>% sub(pattern = "Body", replacement = "") %>% sub(pattern = "Jerk", replacement = "jerk-") %>% sub(pattern = "*Mag*", replacement = "magnitude-") %>% sub(pattern = "*Gravity*", replacement = "gravity-") %>% gsub(pattern = "*--*", replacement = "-") %>% sub(pattern = "*\\(\\)*", replacement = "-")
df_mstd %>% names %>% sub(pattern = "^t", replacement = "time-") %>% sub(pattern = "^f", replacement = "FFT-") %>% sub(pattern = "*Acc*", replacement = "-accelerometer-") %>% sub(pattern = "Gyro", replacement = "-gyrometer-") %>% sub(pattern = "*Body*", replacement = "body") %>% sub(pattern = "Body", replacement = "") %>% sub(pattern = "Jerk", replacement = "jerk-") %>% sub(pattern = "*Mag*", replacement = "magnitude-") %>% sub(pattern = "*Gravity*", replacement = "gravity-") %>% gsub(pattern = "*--*", replacement = "-") %>% sub(pattern = "*\\(\\)*", replacement = "")
colnames(df_mstd) <- df_mstd %>%
names %>%
sub(pattern = "^t", replacement = "time-") %>%
sub(pattern = "^f", replacement = "FFT-") %>%
sub(pattern = "*Acc*", replacement = "-accelerometer-") %>%
sub(pattern = "Gyro", replacement = "-gyrometer-") %>%
sub(pattern = "*Body*", replacement = "body") %>%
sub(pattern = "Body", replacement = "") %>%
sub(pattern = "Jerk", replacement = "jerk-") %>%
sub(pattern = "*Mag*", replacement = "magnitude-") %>%
sub(pattern = "*Gravity*", replacement = "gravity-") %>%
gsub(pattern = "*--*", replacement = "-") %>%
sub(pattern = "*\\(\\)*", replacement = "")
colnames(df_mstd)
#Step 4
colnames(df_mstd) <- df_mstd %>%
names %>%
sub(pattern = "^t", replacement = "time-") %>%
sub(pattern = "^f", replacement = "fft-") %>%
sub(pattern = "*Acc*", replacement = "-accelerometer-") %>%
sub(pattern = "Gyro", replacement = "-gyrometer-") %>%
sub(pattern = "*Body*", replacement = "body") %>%
sub(pattern = "Body", replacement = "") %>%
sub(pattern = "Jerk", replacement = "jerk-") %>%
sub(pattern = "*Mag*", replacement = "magnitude-") %>%
sub(pattern = "*Gravity*", replacement = "gravity-") %>%
gsub(pattern = "*--*", replacement = "-") %>%
sub(pattern = "*\\(\\)*", replacement = "")
colnames(df_mstd)
colnames(df_mstd)[1]
colnames(df_mstd)[1] <- "test-type"
colnames(df_mstd)
str(df_mstd)
###--- Libraries ---###
library(dplyr)
### Step 0 - Read Data ###
labs_raw <- read.csv("UCI\ HAR\ Dataset/activity_labels.txt", header = FALSE)
feats <- read.table("UCI\ HAR\ Dataset/features.txt", header = FALSE)
x_test_raw <- read.table("UCI\ HAR\ Dataset/test/X_test.txt", header = FALSE)
y_test_raw <- read.table("UCI\ HAR\ Dataset/test/y_test.txt", header = FALSE)
x_train_raw <- read.table("UCI\ HAR\ Dataset/train/X_train.txt", header = FALSE)
y_train_raw <- read.table("UCI\ HAR\ Dataset/train/y_train.txt", header = FALSE)
## Add set type: 0 for test and 1 for train ##
## A hot one encoding could be done here, but choosing only one column keeps
## the date a little more tidy
y_test <- cbind(rep(0, dim(y_test_raw)[1]), y_test_raw)
y_train <- cbind(rep(1, dim(y_train_raw)[1]), y_train_raw)
## Prepare dataframes. First assign names to the rows
x_test <- x_test_raw    # Backup the raw data
x_train <- x_train_raw  # Backup the raw data
colnames(y_test) <- c("test_type", "activity")
colnames(y_train) <- c("test_type", "activity")
colnames(x_test) <- feats$V2
colnames(x_train) <- feats$V2
### Step 3
## I have chosen to make step 3 before everything else because I think it would
## reduce time, since the dataframes sizes are smaller. I have kept every
## "walking*" as separate values because they are 3 distinct types of
## activities and I don't see the point of merging them together.
labs <- apply(labs_raw, 1, function(x) sub("[0-9] ", "", x))
## I coulnd't think of a better way of doing this, so I ended up doing this
## instead of something more "elegant".
j1 <- c()
j2 <- c()
for(i in 1:dim(y_test)[1]){
j1[i] <- labs[y_test[i,2]]
}
for(i in 1:dim(y_train)[1]){
j2[i] <- labs[y_train[i,2]]
}
y_test$activity <- j1
y_train$activity <- j2
# Step 1 - Merging the dataframes
test <- cbind(y_test, x_test)
train <- cbind(y_train, x_train)
df_tt <- rbind(test, train)
# Step 2 - extract all columns with the mean and std
## I decided to keep the activity and test_type columns because of step 5.
df_mstd <- df_tt %>%
names %>%
grep(pattern = "*mean*|*std*") %>%
as.array %>%
select(2, .data = df_tt)
#Step 4
colnames(df_mstd) <- df_mstd %>%
names %>%
sub(pattern = "^t", replacement = "time-") %>%
sub(pattern = "^f", replacement = "fft-") %>%
sub(pattern = "*Acc*", replacement = "-accelerometer-") %>%
sub(pattern = "Gyro", replacement = "-gyrometer-") %>%
sub(pattern = "*Body*", replacement = "body") %>%
sub(pattern = "Body", replacement = "") %>%
sub(pattern = "Jerk", replacement = "jerk-") %>%
sub(pattern = "*Mag*", replacement = "magnitude-") %>%
sub(pattern = "*Gravity*", replacement = "gravity-") %>%
gsub(pattern = "*--*", replacement = "-") %>%
sub(pattern = "*\\(\\)*", replacement = "")
colnames(df_mstd)[1] <- "test-type"
str(df_mstd)
x <- group_by(df_mstd, activity)
head(x)
str(x)
table(x, mean)
?table
summarize_all(x)
summarize_all(x, "mean")
y <- summarize_all(x, "mean")
dim(y)
dim(df_mstd)
?table
head(y)
str(df_mstd)
dim(df_mstd)
x <- group_by(df_mstd, activity)
y <- summarize_all(x, "mean")
dim(y)
str(y)
View(y)
df_final <- df_mstd %>%
group_by(activity) %>%
summarise_all("mean")
View(df_final)
write.csv(df_final, "final.csv")
View(read.csv("final.csv"))
###--- Libraries ---###
library(dplyr)
### Step 0 - Read Data ###
labs_raw <- read.csv("UCI\ HAR\ Dataset/activity_labels.txt", header = FALSE)
feats <- read.table("UCI\ HAR\ Dataset/features.txt", header = FALSE)
x_test_raw <- read.table("UCI\ HAR\ Dataset/test/X_test.txt", header = FALSE)
y_test_raw <- read.table("UCI\ HAR\ Dataset/test/y_test.txt", header = FALSE)
x_train_raw <- read.table("UCI\ HAR\ Dataset/train/X_train.txt", header = FALSE)
y_train_raw <- read.table("UCI\ HAR\ Dataset/train/y_train.txt", header = FALSE)
## Add set type: 0 for test and 1 for train ##
## A hot one encoding could be done here, but choosing only one column keeps
## the date a little more tidy
y_test <- cbind(rep(0, dim(y_test_raw)[1]), y_test_raw)
y_train <- cbind(rep(1, dim(y_train_raw)[1]), y_train_raw)
## Prepare dataframes. First assign names to the rows
x_test <- x_test_raw    # Backup the raw data
x_train <- x_train_raw  # Backup the raw data
colnames(y_test) <- c("test_type", "activity")
colnames(y_train) <- c("test_type", "activity")
colnames(x_test) <- feats$V2
colnames(x_train) <- feats$V2
### Step 3
## I have chosen to make step 3 before everything else because I think it would
## reduce time, since the dataframes sizes are smaller. I have kept every
## "walking*" as separate values because they are 3 distinct types of
## activities and I don't see the point of merging them together.
labs <- apply(labs_raw, 1, function(x) sub("[0-9] ", "", x))
## I coulnd't think of a better way of doing this, so I ended up doing this
## instead of something more "elegant".
j1 <- c()
j2 <- c()
for(i in 1:dim(y_test)[1]){
j1[i] <- labs[y_test[i,2]]
}
for(i in 1:dim(y_train)[1]){
j2[i] <- labs[y_train[i,2]]
}
y_test$activity <- j1
y_train$activity <- j2
# Step 1 - Merging the dataframes
test <- cbind(y_test, x_test)
train <- cbind(y_train, x_train)
df_tt <- rbind(test, train)
# Step 2 - extract all columns with the mean and std
## I decided to keep the activity columns because of step 5.
df_mstd <- df_tt %>%
names %>%
grep(pattern = "*mean*|*std*") %>%
as.array %>%
select(2, -1, .data = df_tt)
#Step 4 - Rename columns
colnames(df_mstd) <- df_mstd %>%
names %>%
sub(pattern = "^t", replacement = "time-") %>%
sub(pattern = "^f", replacement = "fft-") %>%
sub(pattern = "*Acc*", replacement = "-accelerometer-") %>%
sub(pattern = "Gyro", replacement = "-gyrometer-") %>%
sub(pattern = "*Body*", replacement = "body") %>%
sub(pattern = "Body", replacement = "") %>%
sub(pattern = "Jerk", replacement = "jerk-") %>%
sub(pattern = "*Mag*", replacement = "magnitude-") %>%
sub(pattern = "*Gravity*", replacement = "gravity-") %>%
gsub(pattern = "*--*", replacement = "-") %>%
sub(pattern = "*\\(\\)*", replacement = "")
#colnames(df_mstd)[1] <- "test-type"
# Step 5
df_final <- df_mstd %>%
group_by(activity) %>%
summarise_all("mean")
write.csv(df_final, "final.csv")
View(read.csv("final.csv"))
str(read.csv("final.csv"))
str(df_mstd)
View(df_mstd)
View(df_final)
###--- Libraries ---###
library(dplyr)
### Step 0 - Read Data ###
labs_raw <- read.csv("UCI\ HAR\ Dataset/activity_labels.txt", header = FALSE)
feats <- read.table("UCI\ HAR\ Dataset/features.txt", header = FALSE)
x_test_raw <- read.table("UCI\ HAR\ Dataset/test/X_test.txt", header = FALSE)
y_test_raw <- read.table("UCI\ HAR\ Dataset/test/y_test.txt", header = FALSE)
x_train_raw <- read.table("UCI\ HAR\ Dataset/train/X_train.txt", header = FALSE)
y_train_raw <- read.table("UCI\ HAR\ Dataset/train/y_train.txt", header = FALSE)
## Add set type: 0 for test and 1 for train ##
## A hot one encoding could be done here, but choosing only one column keeps
## the date a little more tidy
y_test <- cbind(rep(0, dim(y_test_raw)[1]), y_test_raw)
y_train <- cbind(rep(1, dim(y_train_raw)[1]), y_train_raw)
## Prepare dataframes. First assign names to the rows
x_test <- x_test_raw    # Backup the raw data
x_train <- x_train_raw  # Backup the raw data
colnames(y_test) <- c("test_type", "activity")
colnames(y_train) <- c("test_type", "activity")
colnames(x_test) <- feats$V2
colnames(x_train) <- feats$V2
### Step 3
## I have chosen to make step 3 before everything else because I think it would
## reduce time, since the dataframes sizes are smaller. I have kept every
## "walking*" as separate values because they are 3 distinct types of
## activities and I don't see the point of merging them together.
labs <- apply(labs_raw, 1, function(x) sub("[0-9] ", "", x))
## I coulnd't think of a better way of doing this, so I ended up doing this
## instead of something more "elegant".
j1 <- c()
j2 <- c()
for(i in 1:dim(y_test)[1]){
j1[i] <- labs[y_test[i,2]]
}
for(i in 1:dim(y_train)[1]){
j2[i] <- labs[y_train[i,2]]
}
y_test$activity <- j1
y_train$activity <- j2
# Step 1 - Merging the dataframes
test <- cbind(y_test, x_test)
train <- cbind(y_train, x_train)
df_tt <- rbind(test, train)
# Step 2 - extract all columns with the mean and std
## I decided to keep the activity columns because of step 5.
df_mstd <- df_tt %>%
names %>%
grep(pattern = "*mean*|*std*") %>%
as.array %>%
select(2, -1, .data = df_tt)
#Step 4 - Rename columns
colnames(df_mstd) <- df_mstd %>%
names %>%
sub(pattern = "^t", replacement = "time-") %>%
sub(pattern = "^f", replacement = "fft-") %>%
sub(pattern = "*Acc*", replacement = "-accelerometer-") %>%
sub(pattern = "Gyro", replacement = "-gyrometer-") %>%
sub(pattern = "*Body*", replacement = "body") %>%
sub(pattern = "Body", replacement = "") %>%
sub(pattern = "Jerk", replacement = "jerk-") %>%
sub(pattern = "*Mag*", replacement = "magnitude-") %>%
sub(pattern = "*Gravity*", replacement = "gravity-") %>%
gsub(pattern = "*--*", replacement = "-") %>%
sub(pattern = "*\\(\\)*", replacement = "")
# Step 5
df_final <- df_mstd %>%
group_by(activity) %>%
summarise_all("mean")
write.csv(df_final, "final.csv")
View(df_final)
###--- Libraries ---###
library(dplyr)
### Step 0 - Read Raw Data ###
labs_raw <- read.csv("UCI\ HAR\ Dataset/activity_labels.txt", header = FALSE)
feats <- read.table("UCI\ HAR\ Dataset/features.txt", header = FALSE)
x_test_raw <- read.table("UCI\ HAR\ Dataset/test/X_test.txt", header = FALSE)
y_test_raw <- read.table("UCI\ HAR\ Dataset/test/y_test.txt", header = FALSE)
x_train_raw <- read.table("UCI\ HAR\ Dataset/train/X_train.txt", header = FALSE)
y_train_raw <- read.table("UCI\ HAR\ Dataset/train/y_train.txt", header = FALSE)
## Add set type: 0 for test and 1 for train ##
## A hot one encoding could be done here, but choosing only one column keeps
## the date a little more tidy
y_test <- cbind(rep(0, dim(y_test_raw)[1]), y_test_raw)
y_train <- cbind(rep(1, dim(y_train_raw)[1]), y_train_raw)
## Prepare dataframes. First assign names to the rows
x_test <- x_test_raw    # Backup the raw data
x_train <- x_train_raw  # Backup the raw data
colnames(y_test) <- c("test_type", "activity")
colnames(y_train) <- c("test_type", "activity")
colnames(x_test) <- feats$V2
colnames(x_train) <- feats$V2
### Step 3
## I have chosen to make step 3 before everything else because I think it would
## reduce time, since the dataframes sizes are smaller. I have kept every
## "walking*" as separate values because they are 3 distinct types of
## activities and I don't see the point of merging them together.
labs <- apply(labs_raw, 1, function(x) sub("[0-9] ", "", x))
## I coulnd't think of a better way of doing this, so I ended up doing this
## instead of something more "elegant".
j1 <- c()
j2 <- c()
for(i in 1:dim(y_test)[1]){
j1[i] <- labs[y_test[i,2]]
}
for(i in 1:dim(y_train)[1]){
j2[i] <- labs[y_train[i,2]]
}
y_test$activity <- j1
y_train$activity <- j2
# Step 1 - Merging the dataframes
test <- cbind(y_test, x_test)
train <- cbind(y_train, x_train)
df_tt <- rbind(test, train)
# Step 2 - extract all columns with the mean and std
## I decided to keep the activity columns because of step 5.
df_mstd <- df_tt %>%
names %>%
grep(pattern = "*mean*|*std*") %>%
as.array %>%
select(2, -1, .data = df_tt)
#Step 4 - Rename columns
colnames(df_mstd) <- df_mstd %>%
names %>%
sub(pattern = "^t", replacement = "time-") %>%
sub(pattern = "^f", replacement = "fft-") %>%
sub(pattern = "*Acc*", replacement = "-accelerometer-") %>%
sub(pattern = "Gyro", replacement = "-gyrometer-") %>%
sub(pattern = "*Body*", replacement = "body") %>%
sub(pattern = "Body", replacement = "") %>%
sub(pattern = "Jerk", replacement = "jerk-") %>%
sub(pattern = "*Mag*", replacement = "magnitude-") %>%
sub(pattern = "*Gravity*", replacement = "gravity-") %>%
gsub(pattern = "*--*", replacement = "-") %>%
sub(pattern = "*\\(\\)*", replacement = "")
# Step 5
df_final <- df_mstd %>%
group_by(activity) %>%
summarise_all("mean")
write.txt(df_final, "final.txt", row.name  = FALSE)
write.table(df_final, "final.txt", row.name  = FALSE)
c <- colnames(df_mstd)
grep(c, pattern = "*gyrometer*")
?grep
c %>% grep(pattern = "*gyrometer*") %>% c[]
a <- colnames(df_mstd)
remove(c)
c
a %>% grep(pattern = "*gyrometer*") %>% select
a %>% grep(pattern = "*gyrometer*", label = TRUE)
a %>% grep(pattern = "*gyrometer*") %>% c
a %>% grep(pattern = "*gyrometer*") %>% c %>% select(a)
?select
a %>% grep(pattern = "*gyrometer*") %>% c %>% select(.data =a)
a
b <- a %>% grep(pattern = "*gyrometer*")
a[b,]
a[b]
a[b] <- paste(a[b], "[rad/s]", sep = "-")
a[b]
a
b <- colnames(df_mstd) %>% grep(pattern = "*gyrometer*")
colnames(df_mstd)[b] <- paste(colnames(df_mstd)[b], "[rad/s]", sep = "-")
b <- colnames(df_mstd) %>% grep(pattern = "*accelerometer*|*gravity*")
colnames(df_mstd)[b] <- paste(colnames(df_mstd)[b], "[g]", sep = "-")
colnames(df_mstd)
b <- colnames(df_mstd) %>% grep(pattern = "*jerk*&*rad/s*")
colnames(df_mstd)[b] <- sub(colnames(df_mstd)[b], pattern = "[rad/s]", replacement = "[rad/s^2]")
colnames(df_mstd)
b <- colnames(df_mstd) %>% grep(pattern = "*jerk*&*rad/s*")
colnames(df_mstd)[b] <- sub(colnames(df_mstd)[b], pattern = "*[rad/s]*", replacement = "[rad/s^2]")
colnames(df_mstd)
b <- colnames(df_mstd) %>% grep(pattern = "*jerk*&*rad/s*")
colnames(df_mstd)[b] <- sub(colnames(df_mstd)[b], pattern = "*\\[rad/s\\]*", replacement = "[rad/s^2]")
colnames(df_mstd)
b
b <- colnames(df_mstd) %>% grep(pattern = "*jerk*") %>% grep(pattern = "*rad/s*")
colnames(df_mstd)[b] <- sub(colnames(df_mstd)[b], pattern = "*\\[rad/s\\]*", replacement = "[rad/s^2]")
b
b <- colnames(df_mstd) %>% grep(pattern = "*jerk*") %>% grep(pattern = "*rad\\/s*")
b
b <- colnames(df_mstd) %>% grep(pattern = "*jerk*") %>% grep(pattern = "*rad*")
b
b <- colnames(df_mstd) %>% grep(pattern = "*jerk*")# %>% grep(pattern = "*rad*")
b
colnames(df_mstd)[b]
b <- colnames(df_mstd) %>% grep(pattern = "*jerk*") %>% grep(pattern = "*\\[g\\]*")
b
b <- colnames(df_mstd) %>% grep(pattern = "*jerk*") %>% grep(pattern = "*\[g\]*")
b <- colnames(df_mstd) %>% grep(pattern = "*jerk*") %>% grep(pattern = "*\\[rad")
b
b <- colnames(df_mstd) %>% grep(pattern = "*\\[rad*")# %>% grep(pattern = "*\\[rad")
b
colnames(df_mstd)[b]
b <- colnames(df_mstd) %>% grep(pattern = "*\\[rad*") %>% grep(pattern = "*jerk*")
b
b <- colnames(df_mstd) %>% grep(pattern = "*\\[rad*&jerk")
b
b <- colnames(df_mstd) %>% grep(pattern = "*\\[rad*&*jerk*")
b
?grep
b <- colnames(df_mstd) %>% grep(pattern = "*jerk*")
colnames(df_mstd)[b] <- sub(colnames(df_mstd)[b], pattern = "*\\[rad/s\\]*", replacement = "[rad/s^2]")
colnames(df_mstd)
b <- colnames(df_mstd) %>% grep(pattern = "*jerk*")
colnames(df_mstd)[b] <- sub(colnames(df_mstd)[b], pattern = "*\\[g\\]*", replacement = "[g/s]")
colnames(df_mstd)
b <- colnames(df_mstd) %>% grep(pattern = "*magnitude-mean*")
colnames(df_mstd)[b] <- sub(colnames(df_mstd)[b],
pattern = "*magnitude-mean*",
replacement = "*mean-magnitude*")
colnames(df_mstd)
b <- colnames(df_mstd) %>% grep(pattern = "*magnitude-std*")
colnames(df_mstd)[b] <- sub(colnames(df_mstd)[b],
pattern = "*magnitude-std*",
replacement = "std-magnitude")
colnames(df_mstd)
###--- Libraries ---###
library(dplyr)
### Step 0 - Read Raw Data ###
labs_raw <- read.csv("UCI\ HAR\ Dataset/activity_labels.txt", header = FALSE)
feats <- read.table("UCI\ HAR\ Dataset/features.txt", header = FALSE)
x_test_raw <- read.table("UCI\ HAR\ Dataset/test/X_test.txt", header = FALSE)
y_test_raw <- read.table("UCI\ HAR\ Dataset/test/y_test.txt", header = FALSE)
x_train_raw <- read.table("UCI\ HAR\ Dataset/train/X_train.txt", header = FALSE)
y_train_raw <- read.table("UCI\ HAR\ Dataset/train/y_train.txt", header = FALSE)
## Add set type: 0 for test and 1 for train ##
## A hot one encoding could be done here, but choosing only one column keeps
## the date a little more tidy
y_test <- cbind(rep(0, dim(y_test_raw)[1]), y_test_raw)
y_train <- cbind(rep(1, dim(y_train_raw)[1]), y_train_raw)
## Prepare dataframes. First assign names to the rows
x_test <- x_test_raw    # Backup the raw data
x_train <- x_train_raw  # Backup the raw data
colnames(y_test) <- c("test_type", "activity")
colnames(y_train) <- c("test_type", "activity")
colnames(x_test) <- feats$V2
colnames(x_train) <- feats$V2
### Step 3 - Descriptive activity names
## I have chosen to make step 3 before everything else because I think it would
## reduce time, since the dataframes sizes are smaller. I have kept every
## "walking*" as a different value because they are 3 distinct types of
## activities and I don't see the point of merging them together.
labs <- apply(labs_raw, 1, function(x) sub("[0-9] ", "", x))
## I coulnd't think of a better way of doing this, so I ended up doing this
## instead of something more "elegant".
j1 <- c()
j2 <- c()
for(i in 1:dim(y_test)[1]){
j1[i] <- labs[y_test[i,2]]
}
for(i in 1:dim(y_train)[1]){
j2[i] <- labs[y_train[i,2]]
}
y_test$activity <- j1
y_train$activity <- j2
# Step 1 - Merging the dataframes
test <- cbind(y_test, x_test)
train <- cbind(y_train, x_train)
df_tt <- rbind(test, train)
# Step 2 - extract all columns with the mean and std
## I decided to keep the activity columns because of step 5.
df_mstd <- df_tt %>%
names %>%
grep(pattern = "*mean*|*std*") %>%
as.array %>%
select(2, -1, .data = df_tt)
#Step 4 - Rename columns
colnames(df_mstd) <- df_mstd %>%
names %>%
sub(pattern = "^t", replacement = "time-") %>%
sub(pattern = "^f", replacement = "fft-") %>%
sub(pattern = "*Acc*", replacement = "-accelerometer-") %>%
sub(pattern = "Gyro", replacement = "-gyrometer-") %>%
sub(pattern = "*Body*", replacement = "body") %>%
sub(pattern = "Body", replacement = "") %>%
sub(pattern = "Jerk", replacement = "jerk-") %>%
sub(pattern = "*Mag*", replacement = "magnitude-") %>%
sub(pattern = "*Gravity*", replacement = "gravity-") %>%
gsub(pattern = "*--*", replacement = "-") %>%
sub(pattern = "*\\(\\)*", replacement = "")
### Append units.
## I am sure that the time domain variables are ok, however
## the frequency domain units I have my doubts, maybe they are g.Hz, [m/s].Hz or
## they end up remaining the same after the FFT. In any case I have chosen to
## keep all units in the "time domain": g, g/s, rad/s, rad/s^2
b <- colnames(df_mstd) %>% grep(pattern = "*gyrometer*")
colnames(df_mstd)[b] <- paste(colnames(df_mstd)[b], "[rad/s]", sep = "-")
b <- colnames(df_mstd) %>% grep(pattern = "*jerk*")
colnames(df_mstd)[b] <- sub(colnames(df_mstd)[b], pattern = "*\\[rad/s\\]*", replacement = "[rad/s^2]")
b <- colnames(df_mstd) %>% grep(pattern = "*accelerometer*|*gravity*")
colnames(df_mstd)[b] <- paste(colnames(df_mstd)[b], "[g]", sep = "-")
b <- colnames(df_mstd) %>% grep(pattern = "*jerk*")
colnames(df_mstd)[b] <- sub(colnames(df_mstd)[b], pattern = "*\\[g\\]*", replacement = "[g/s]")
b <- colnames(df_mstd) %>% grep(pattern = "*magnitude-mean*")
colnames(df_mstd)[b] <- sub(colnames(df_mstd)[b],
pattern = "*magnitude-mean*",
replacement = "mean-magnitude")
b <- colnames(df_mstd) %>% grep(pattern = "*magnitude-std*")
colnames(df_mstd)[b] <- sub(colnames(df_mstd)[b],
pattern = "*magnitude-std*",
replacement = "std-magnitude")
# Step 5 - Export txt table
df_final <- df_mstd %>%
group_by(activity) %>%
summarise_all("mean")
write.table(df_final, "final_tidy.txt", row.name  = FALSE)
colnames(df_mstd)
df_final$activity
